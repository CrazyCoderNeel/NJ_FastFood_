<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5qaACiiigAooooA//9k=
</value>
  </data>
</root>